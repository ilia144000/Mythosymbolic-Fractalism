name: Prepare Release (bump + tag)

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (format: X.Y.Z)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Ensure dependencies (cffconvert)
        run: |
          python -m pip install --upgrade pip
          pip install cffconvert==2.*

      - name: Update CITATION.cff version/date
        id: bump
        run: |
          VERSION="${ github.event.inputs.version }"
          DATE="$(date -u +%Y-%m-%d)"
          echo "Version: $VERSION"
          echo "Date:    $DATE"
          python - << 'PY'
import sys, re, datetime, pathlib, yaml
from datetime import datetime as dt

p = pathlib.Path("CITATION.cff")
if not p.exists():
    print("::error::CITATION.cff not found at repo root"); sys.exit(1)

data = yaml.safe_load(p.read_text(encoding="utf-8"))
if not isinstance(data, dict):
    print("::error::Invalid CITATION.cff format"); sys.exit(1)

# Inject version/date from env (passed via shell)
import os
ver = os.environ.get("VERSION")
date = os.environ.get("DATE")

data["version"] = ver
data["date-released"] = date

# Write back
p.write_text(yaml.safe_dump(data, sort_keys=False, allow_unicode=True), encoding="utf-8")
print(f"Updated version -> {ver} | date-released -> {date}")
PY

      - name: Validate CITATION.cff
        run: |
          cffconvert --validate --infile CITATION.cff

      - name: Commit changes
        run: |
          VERSION="${ github.event.inputs.version }"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CITATION.cff
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore(release): bump CITATION.cff to v$VERSION"
          fi

      - name: Create tag
        run: |
          VERSION="${ github.event.inputs.version }"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push origin "v$VERSION"
          git push
